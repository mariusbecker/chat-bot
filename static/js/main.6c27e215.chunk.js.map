{"version":3,"sources":["Data/getSentence.js","Components/Context/index.js","Components/ConversationItem/index.js","Components/ConversationList/index.js","Components/PostItem/index.js","Components/DateItem/index.js","Components/ConversationHeader/index.js","Components/Conversation/index.js","Components/Menu/index.js","Components/App/index.js","serviceWorker.js","index.js"],"names":["Object","defineProperty","exports","value","Subject1","Subject2","namen","couppler","default","rnd","rand","Math","random","floor","length","WrappedComponent","UIContext","React","createContext","UIConsumer","Consumer","UIProvider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","activeConversation","isWriting","isOnline","menuOpen","conversations","toConsumableArray","DATA","toggleMenuOpen","setState","objectSpread","appendWriter","id","appendOnline","removeWriter","filter","item","removeOnline","appendPostItem","_ref","type","from","text","unread","newConversations","map","conversation","newConversation","push","date","parseInt","Date","getTime","setActiveConversation","forEach","post","inherits","createClass","key","react_default","a","createElement","Provider","actions","props","children","Component","ConversationItem","_this$props","name","active","writing","me","online","time","toLocaleString","hour","minute","context","className","onClick","e","alt","src","ConversationList","arr","sort","b","Components_ConversationItem","writer","user","PostItem","DateItem","year","month","day","ConversationHeader","Conversation","onKeyDown","event","keyCode","shiftKey","preventDefault","handleSubmit","scrollToBottom","messageList","ref","current","maxScrollTop","scrollHeight","clientHeight","scrollTop","createRef","setTimeout","target","_this2","currentConversation","find","react","Components_ConversationHeader","index","Components_DateItem","date1","date2","dt1","dt2","UTC","getFullYear","getMonth","getDate","dateDiffInDays","Components_PostItem","onSubmit","placeholder","onChange","handleChange","Menu","open","App","setInterval","getSentence","Components_Menu","Components_ConversationList","Components_Conversation","withContext","_React$Component2","_class2","assign","Boolean","window","location","hostname","match","ReactDOM","render","Context_UIProvider","Components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c27e215.chunk.js","sourcesContent":["Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n// https://github.com/davidak/satzgenerator\n// merci https://www.stephanl.de/satz\n\nvar Subject1 = [\n  \"Dein Bein\",\n  \"Dein Bauch\",\n  \"Dein Kopf\",\n  \"Dein Fuss\",\n  \"Dein grosser Zeh\",\n  \"Dein Arm\",\n  \"Die Weltwirtschaftskrise\",\n  \"Dein Daumen\",\n  \"Dein Haar\",\n  \"Dein Gesicht\",\n  \"Ein Witz von dir\",\n  \"Dein Geist\",\n  \"Dein Gehirn\",\n  \"Deine Orientierungsgabe\",\n  \"Nichts\",\n  \"Ein Schüleraustausch\",\n  \"Dich zu sehen\",\n  \"Deine Menschenkenntnis\",\n  \"1 Złoty\"\n];\nvar Subject2 = [\n  \"Enzos Fuss\",\n  \"eine Banane\",\n  \"der Inhalt von Frau Renners Kopf\",\n  \"alle Religionen zusammen\",\n  \"einer von vielen Kommentaren auf YouTube\",\n  \"alle Nachrichten auf Twitter zusammen\",\n  \"eine Gurke\",\n  \"deine Mutter\",\n  \"der Internet Explorer\",\n  \"die Verspätung der Deutschen Bahn\",\n  \"die total echten Freundschaften auf Facebook\",\n  \"ein Katzenvideo auf YouTube\",\n  \"die Dauer des Streiks des DHL\",\n  \"der Sinn des Lebens\",\n  \"Nachts am Bahnhof auf den Zug zu warten\",\n  \"12h Busfahrt\",\n  \"die Dunkelheit\"\n];\nvar namen = [\n  \"Urs\",\n  \"Julian\",\n  \"Marvin\",\n  \"Hung\",\n  \"David\",\n  \"Erik\",\n  \"Herr Paulus\",\n  \"Herr Strobel\",\n  \"Jasiek\",\n  \"Kamil\",\n  \"Deine Mutter\",\n  \"Deine Zimmerpflanze\"\n];\nvar couppler = [\n  \"der geilste im Dorf\",\n  \"der, der die Witze von Herr Strobel immer als erster versteht\",\n  \"in dich verliebt\",\n  \"ein heimlicher Stalker\",\n  \"ein grosser Fan von DagiBee\",\n  \"ein verdammt guter Programmierer\",\n  \"ein Experte für heikele Lebensfragen\",\n  \"der neue Kevin\",\n  \"Eiskunstläufer (Männlich und sexy zugleich)\"\n];\nlet sentence = rnd => {\n  let rand = rnd || (() => Math.random());\n  var randomNr = Math.floor(rand() * 3);\n  if (randomNr === 1) {\n    return (\n      Subject1[Math.floor(rand() * Subject1.length)] +\n      \" ist wie \" +\n      Subject2[Math.floor(rand() * Subject2.length)] +\n      \".\"\n    );\n  } else {\n    return (\n      namen[Math.floor(rand() * namen.length)] +\n      \" ist \" +\n      couppler[Math.floor(rand() * couppler.length)] +\n      \".\"\n    );\n  }\n};\n\n// export let getSentence = sentence;\nexports.default = sentence;\n","import React, { Component } from \"react\";\nimport DATA from \"../../Data/index.json\";\n\nexport const UIContext = React.createContext();\n\nexport const UIConsumer = UIContext.Consumer;\n\nexport class UIProvider extends Component {\n  state = {\n    activeConversation: null,\n    isWriting: [3],\n    isOnline: [4],\n    menuOpen: true,\n    conversations: [...DATA.conversations]\n  };\n\n  toggleMenuOpen = () => {\n    this.setState({\n      ...this.state,\n      menuOpen: !this.state.menuOpen\n    });\n  };\n  appendWriter = id => {\n    this.setState({\n      ...this.state,\n      isWriting: [...this.state.isWriting, id]\n    });\n  };\n  appendOnline = id => {\n    this.setState({\n      ...this.state,\n      isOnline: [...this.state.isOnline, id]\n    });\n  };\n  removeWriter = id => {\n    this.setState({\n      ...this.state,\n      isWriting: this.state.isWriting.filter(item => item !== id)\n    });\n  };\n  removeOnline = id => {\n    this.setState({\n      ...this.state,\n      isOnline: this.state.isOnline.filter(item => item !== id)\n    });\n  };\n  appendPostItem = ({ id, type, from, text, unread }) => {\n    let newConversations = this.state.conversations.map(conversation => {\n      let newConversation = { ...conversation };\n      if (newConversation.id === id) {\n        newConversation.conversation.push({\n          id: id * 1000 + newConversation.conversation.length,\n          type,\n          from,\n          text,\n          date: parseInt(new Date().getTime() / 1000),\n          unread: this.state.activeConversation === from ? false : unread\n        });\n      }\n      return newConversation;\n    });\n\n    this.setState({\n      ...this.state,\n      conversations: newConversations\n    });\n  };\n\n  setActiveConversation = id => {\n    let newConversations = [];\n\n    this.state.conversations.forEach(conversation => {\n      let newConversation = { ...conversation };\n\n      if (conversation.id === id) {\n        newConversation.conversation = conversation.conversation.map(post => ({\n          ...post,\n          unread: false\n        }));\n      }\n\n      newConversations.push(newConversation);\n    });\n\n    this.setState({\n      ...this.state,\n      conversations: newConversations,\n      menuOpen: false,\n      activeConversation: id\n    });\n  };\n\n  render() {\n    return (\n      <UIContext.Provider\n        value={{\n          ...this.state,\n          actions: {\n            setActiveConversation: this.setActiveConversation,\n            appendPostItem: this.appendPostItem,\n            appendOnline: this.appendOnline,\n            appendWriter: this.appendWriter,\n            removeWriter: this.removeWriter,\n            removeOnline: this.removeOnline,\n            toggleMenuOpen: this.toggleMenuOpen\n          }\n        }}\n      >\n        {this.props.children}\n      </UIContext.Provider>\n    );\n  }\n}\n\nexport const withProvider = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return (\n        <UIProvider>\n          <WrappedComponent {...this.props} />\n        </UIProvider>\n      );\n    }\n  };\n};\n\nexport const withContext = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return (\n        <UIConsumer>\n          {context => <WrappedComponent {...this.props} context={context} />}\n        </UIConsumer>\n      );\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { UIConsumer } from \"../Context\";\nimport \"./styles.css\";\n\nclass ConversationItem extends Component {\n  render() {\n    const {\n      id,\n      name,\n      active,\n      text,\n      writing,\n      unread,\n      date,\n      me,\n      online\n    } = this.props;\n\n    var options = { hour: \"2-digit\", minute: \"2-digit\" };\n    var time = new Date(date * 1000).toLocaleString(\"de-DE\", options);\n\n    return (\n      <UIConsumer>\n        {context => {\n          return (\n            <button\n              className={`ConversationItem ConversationItem--${\n                active ? \"active\" : \"inactive\"\n              } ConversationItem--${me ? \"me\" : \"others\"} ConversationItem--${\n                writing ? \"online\" : online ? \"online\" : \"offline\"\n              }`}\n              onClick={e => {\n                context.actions.setActiveConversation(id);\n              }}\n            >\n              <div className=\"ConversationItem__Avatar\">\n                <img\n                  className=\"ConversationItem__AvatarImage\"\n                  alt=\"avatar\"\n                  src={`/assets/avatar/${id}.jpg`}\n                />\n              </div>\n              <div className=\"ConversationItem__Infos\">\n                <div className=\"ConversationItem__Name\">\n                  <h3>{name}</h3>\n                </div>\n                <div className=\"ConversationItem__Preview\">\n                  <p>{text}</p>\n                </div>\n                <div className=\"ConversationItem__Time\">{time}</div>\n              </div>\n\n              {writing && <div className=\"ConversationItem__Writing\" />}\n              {unread > 0 && (\n                <div className=\"ConversationItem__UnreadCount\">{unread}</div>\n              )}\n            </button>\n          );\n        }}\n      </UIConsumer>\n    );\n  }\n}\n\nexport default ConversationItem;\n","import React, { Component } from \"react\";\nimport ConversationItem from \"../ConversationItem\";\nimport { UIConsumer } from \"../Context\";\n\nimport \"./styles.css\";\n\nclass ConversationList extends Component {\n  render() {\n    let sortConversation = arr => {\n      return arr.sort((a, b) => {\n        return (\n          new Date(b.conversation[b.conversation.length - 1].date) -\n          new Date(a.conversation[a.conversation.length - 1].date)\n        );\n      });\n    };\n\n    return (\n      <UIConsumer>\n        {context => (\n          <div className=\"ConversationList\">\n            {sortConversation(context.conversations).map(item => {\n              return (\n                <ConversationItem\n                  key={item.id}\n                  id={item.id}\n                  name={item.name}\n                  text={item.conversation[item.conversation.length - 1].text}\n                  date={item.conversation[item.conversation.length - 1].date}\n                  me={\n                    item.conversation[item.conversation.length - 1].from ===\n                    \"me\"\n                  }\n                  active={context.activeConversation === item.id}\n                  writing={\n                    context.isWriting.filter(writer => writer === item.id)\n                      .length > 0\n                  }\n                  online={\n                    context.isOnline.filter(user => user === item.id)\n                      .length > 0\n                  }\n                  unread={\n                    item.conversation.filter(post => post.unread === true)\n                      .length\n                  }\n                />\n              );\n            })}\n          </div>\n        )}\n      </UIConsumer>\n    );\n  }\n}\n\nexport default ConversationList;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\n\nclass PostItem extends Component {\n  render() {\n    const { type, from, text, date } = this.props;\n\n    var options = { hour: \"2-digit\", minute: \"2-digit\" };\n    var time = new Date(date * 1000).toLocaleString(\"de-DE\", options);\n\n    return (\n      <div\n        className={`PostItem PostItem--${type} PostItem--${\n          from === \"me\" ? \"me\" : \"other\"\n        }`}\n      >\n        <div\n          className={`PostItem__Post PostItem__Post--${type} PostItem__Post--${\n            from === \"me\" ? \"me\" : \"other\"\n          }`}\n        >\n          <div className=\"PostItem__Text\">{text}</div>\n          <div className=\"PostItem__Time\">{time}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostItem;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\n\nclass DateItem extends Component {\n  render() {\n    const { date } = this.props;\n\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    var time = new Date(date * 1000).toLocaleString(\"de-DE\", options);\n\n    return (\n      <div className=\"DateItem\">\n        <div className=\"DateItem__Time\">{time}</div>\n      </div>\n    );\n  }\n}\n\nexport default DateItem;\n","import React, { Component } from \"react\";\n\nimport \"./styles.css\";\n\nclass ConversationHeader extends Component {\n  render() {\n    let { id, name, date } = this.props;\n\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n    var time = new Date(date * 1000).toLocaleString(\"de-DE\", options);\n\n    return (\n      <div className=\"ConversationHeader\">\n        <div className=\"ConversationHeader__Avatar\">\n          <img\n            className=\"ConversationHeader__AvatarImage\"\n            alt=\"avatar\"\n            src={`/assets/avatar/${id}.jpg`}\n          />\n        </div>\n        <div className=\"ConversationHeader__Infos\">\n          <div className=\"ConversationHeader__Name\">\n            <h3>{name}</h3>\n          </div>\n          <div className=\"ConversationHeader__Status\">\n            Zuletzt online: {time}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ConversationHeader;\n","import React, { Component, Fragment } from \"react\";\nimport { UIConsumer } from \"../Context\";\nimport PostItem from \"../PostItem\";\nimport DateItem from \"../DateItem\";\nimport ConversationHeader from \"../ConversationHeader\";\nimport \"./styles.css\";\n\nvar dateDiffInDays = function(date1, date2) {\n  let dt1 = new Date(date1 * 1000);\n  let dt2 = new Date(date2 * 1000);\n\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24)\n  );\n};\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n    this.ref = React.createRef();\n  }\n\n  handleSubmit(event, context) {\n    event.preventDefault(); //deactivate\n\n    context.actions.appendPostItem({\n      id: context.activeConversation,\n      type: \"text\",\n      from: \"me\",\n      text: this.state.value\n    });\n    context.actions.appendWriter(context.activeConversation);\n\n    setTimeout(() => {\n      context.actions.appendPostItem({\n        id: context.activeConversation,\n        type: \"text\",\n        from: context.activeConversation,\n        text: \"Super! 🤓\",\n        unread: true\n      });\n\n      context.actions.removeWriter(context.activeConversation);\n    }, Math.floor(Math.random() * 3000 + 2000));\n\n    this.setState({ value: \"\" });\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  onKeyDown = (event, context) => {\n    if (event.keyCode === 13 && event.shiftKey === false) {\n      event.preventDefault();\n      this.handleSubmit(event, context);\n    }\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom = () => {\n    const messageList = this.ref.current;\n    if (messageList) {\n      const scrollHeight = messageList.scrollHeight;\n      const height = messageList.clientHeight;\n      const maxScrollTop = scrollHeight - height;\n\n      messageList.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n  };\n\n  render() {\n    return (\n      <UIConsumer>\n        {context => {\n          // no conversation selected\n          if (!context.activeConversation) {\n            return (\n              <div className=\"Conversation\">\n                <div className=\"Conversation__Placeholder\">\n                  <div className=\"Conversation__PlaceholderText\">\n                    IAD2017 Chat\n                  </div>\n                </div>\n              </div>\n            );\n          }\n\n          // is the partner writing\n          const isWriting =\n            context.isWriting.filter(\n              writer => writer === context.activeConversation\n            ).length > 0;\n\n          const currentConversation = context.conversations.find(\n            conversation => conversation.id === context.activeConversation\n          );\n\n          return (\n            <div className=\"Conversation\">\n              <Fragment>\n                <div className=\"Conversation__Header\">\n                  <ConversationHeader\n                    id={currentConversation.id}\n                    name={currentConversation.name}\n                    date={\n                      currentConversation.conversation[\n                        currentConversation.conversation.length - 1\n                      ].date\n                    }\n                  />\n                </div>\n\n                <div className=\"Conversation__PostItems\" ref={this.ref}>\n                  {currentConversation.conversation.map((item, index) => {\n                    return (\n                      <div\n                        key={item.id}\n                        className={`Conversation__PostItem Conversation__PostItem--${\n                          item.from === \"me\" ? \"me\" : \"other\"\n                        }`}\n                      >\n                        {index === 0 && <DateItem date={item.date} />}\n\n                        {index > 0 &&\n                          (dateDiffInDays(\n                            item.date,\n                            currentConversation.conversation[index - 1].date\n                          ) !== 0 && <DateItem date={item.date} />)}\n\n                        {item.type === \"text\" && (\n                          <PostItem\n                            type={item.type}\n                            from={item.from}\n                            text={item.text}\n                            date={item.date}\n                          />\n                        )}\n                      </div>\n                    );\n                  })}\n                  {isWriting && <div className=\"Conversation__Writing\" />}\n                </div>\n                <div\n                  className={`Conversation__Form ${\n                    this.state.value\n                      ? \"Conversation__Form--text\"\n                      : \"Conversation__Form--noText\"\n                  }`}\n                >\n                  <form\n                    onSubmit={e => {\n                      this.handleSubmit(e, context);\n                    }}\n                  >\n                    <div className=\"Conversation__Write\">\n                      <textarea\n                        className=\"Conversation__WriteTextarea\"\n                        value={this.state.value}\n                        placeholder=\"Nachricht schreiben...\"\n                        onKeyDown={e => this.onKeyDown(e, context)}\n                        onChange={e => this.handleChange(e)}\n                      />\n                    </div>\n                    <div className=\"Conversation__Send\">\n                      <input\n                        className=\"Conversation__SendInput\"\n                        type=\"submit\"\n                        value=\"Senden\"\n                      />\n                    </div>\n                  </form>\n                </div>\n              </Fragment>\n            </div>\n          );\n        }}\n      </UIConsumer>\n    );\n  }\n}\n\nexport default Conversation;\n","import React, { Component } from \"react\";\nimport { UIConsumer } from \"../Context\";\nimport \"./styles.css\";\n\nclass Menu extends Component {\n  render() {\n    const { open } = this.props;\n    return (\n      <UIConsumer>\n        {context => {\n          return (\n            <button\n              className={`Menu Menu--${open ? \"Open\" : \"Closed\"}`}\n              onClick={e => context.actions.toggleMenuOpen()}\n            />\n          );\n        }}\n      </UIConsumer>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport ConversationList from \"../ConversationList\";\nimport Conversation from \"../Conversation\";\nimport Menu from \"../Menu\";\nimport { withContext } from \"../Context\";\nimport getSentence from \"../../Data/getSentence\";\n\nclass App extends Component {\n  componentDidMount() {\n    let { context } = this.props;\n\n    // setup a fake writer\n    setInterval(() => {\n      context.actions.appendPostItem({\n        id: 4,\n        type: \"text\",\n        from: 4,\n        text: getSentence(),\n        unread: true\n      });\n    }, 5000);\n\n    // setup a fake online offline\n    setInterval(() => {\n      context.actions.appendOnline(Math.floor(Math.random() * 10));\n    }, 5000);\n\n    // setup a fake online offline\n    setInterval(() => {\n      context.actions.removeOnline(Math.floor(Math.random() * 10));\n    }, 5000);\n  }\n\n  render() {\n    let { context } = this.props;\n    return (\n      <div\n        className={`App App--beta App--Menu${\n          context.menuOpen ? \"Open\" : \"Closed\"\n        }`}\n      >\n        <div className=\"App__Menu\">\n          <Menu open={context.menuOpen} />\n        </div>\n        <div className=\"App__Chat\">\n          <div className=\"App__ConversationList\">\n            <ConversationList />\n          </div>\n          <div className=\"App__Conversation\">\n            <Conversation />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withContext(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport { UIProvider } from \"./Components/Context\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <UIProvider>\n    <App />\n  </UIProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}